FORMAT: 1A

# Introduction

![NMFTA Logo](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/image1.png)

This document is written using [api-blueprint](https://apiblueprint.org/) and available online at both
[opentelematicsapi.docs.apiary.io](https://opentelematicsapi.docs.apiary.io/#) (for browsable document) and
https://github.com/nmfta-repo/nmfta-opentelematics-api for the API blueprint source. Please use https://github.com
/nmfta-repo/nmfta-opentelematics-api to raise issues and suggest changes to the API.

If a telematics system provider (TSP) suddenly goes out of business
(have had two examples of this in 2018) any commercial fleet relying on
their service will need to find a new provider. Due to the lack of a
standardized telematics data format, a commercial fleet manager will
have to reintegrate an alternate telematics provider's data format into
their existing system reporting.

The Open Telematics API (OTAPI) is intended to make the TSP-Carrier interface the same across multiple TSPs. It is not
intended to specify any aspects of the TSP's connections to their telematics devices. Neither does it imply any changes
to the location where data is stored or access controls on the data -- the data will still live at the Motor Freight
Carrier as-sourced from their accounts at the TSP.

![NMFTA Logo](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/overview.png)

This is a standardized API for retrieving telematics logs & data.
Each participating TSP would be individually responsible for the necessary
translations from their existing formats to this Open Telematics
API. Each TSP would continue to be responsible for managing their
own cloud infrastructure housing customer data. The Open Telematics API, as an additional interface,
will be made available by TSPs to allow their customers ready
access to pull data in the standardized format, especially in examples
of mixed TSP fleets.

# Contributors

This Open Telematics API was made possible through the generous contributions of thought leadership and technical expertise
of many collaborators across the heavy vehicle cyber security community, working to push the industry forward and make it
more resilient. Though some of our contributors wish to remain anonymous, we are deeply grateful to everyone who has given
their time and energy to make this a reality.

| **Fleet Managers** | **Telematics Providers** | **Independents** |
|:------------------:|:------------------------:|:----------------:|
|Bill Brown, SEFL | Geotab | Altaz Valani, Security Compass |
| | Samsara Networks, Inc.| Stephen Raio, U.S. Army Combat Capabilities Development Command |
| | | Andrew Smith, ISE Inc. |

![SEFL](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/SFL2c_300dpi-resized.jpg) ![Geotab](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/geotab-logo_full-colour-rgb_resized.png) ![Samsara Networks Inc.](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/samsara_horizontal_logo_black-resized.jpg) ![Security Compass](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/securitycompass-logo-resized.jpg) ![ISE Inc.](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/image1.png media/ISE_A_Trimble_Company_RGB.png)

# Authentication

**All requests** to Open Telematics API endpoints **require authentication**.

For this version of the API, `v1`, all authentication must be performed using HTTP Basic. e.g.

```http
Authorization: Basic YWRtaW46YWRtaW4=
```

This authentication method relies entirely on the security protections provided by the TLS layer; therefore HTTPS is
mandatory on all connections and implementors must follow adhere to the security requirements detailed in the *Security
Requirements for Implementors* section below.

TSPs implementing the Open Telematics API must provide a means to create username-password pair credentials and these
must be associated with roles (see section *Authorization* below).

# Authorization

TSPs implementing the Open Telematics API must include access controls for requests against the following roles.

* *Vehicle Query*
* *Vehicle Follow*
* *Driver Query*
* *Driver Follow*
* *Driver Dispatch*
* *Driver Duty*
* *HR*
* *Admin*

It must be possible for clients to usernames for Authentication (see above) which are assigned to **one role and no more
than one role**.

TSPs implementing the Open Telematics API must restrict authorization of requests to only those roles that are assigned
in the **Access Controls** tables throughout this API specification. The tables will look like the following example:

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:|`DENY/ALLOW` |`DENY/ALLOW`  |`DENY/ALLOW`|`DENY/ALLOW` |`DENY/ALLOW`   |`DENY/ALLOW`|`DENY/ALLOW`|`DENY/ALLOW`|

The intent of these access controls is so that carriers can limit which clients they deploy have access to:
* streaming *feeds* of objects as they are added to the TSP
* any Personally Identifiable Information (PII)

As can be seen in the **Access Controls** tables in the requests subsections of *References* that follow, the roles
are assigned `DENY/ALLOW` such that:

* the *X Query* roles have access only to collections queries
* the *X Follow* roles have access to streaming feeds and queries
* the *Vehicle X* roles cannot access any PII
* the *Driver X* roles can access both vehicle info and PII
* the *Driver Dispatch* role is allowed to update route info and send messages to drivers
* the *Driver Duty* role is allowed to externaly trigger driver duty status (e.g. *Send Duty Status Changes to the TSP*)
* the *HR* role is allowed to update Driver information and TSP portal user accounts

# Security Requirements for Implementors

All TSPs that implement an Open Telematics API instance are expected to
provide a secure service by default. In what follows we outline some
security requirements that are expected in addition to the authentication
and access control that is detailed in the sections above.

## General Security Requirements

Vendors must maintain a vulnerability response and disclosure program in
accordance with established standards such as International Organization
of Standards (ISO)/International Electrotechnical Commission (IEC)
29147:2014 (Information technology \-- Security techniques \--
Vulnerability Disclosure) and ISO/IEC 30111:2013 (Information technology
\-- Security techniques \-- Vulnerability Handling Processes).

Vendors should ensure their vulnerability response and disclosure
program conforms with the ['Legal bug bounty' safe-harbor requirements](https://github.com/EdOverflow/legal-bug-bounty)
to protect researchers and encourage the highest-quality participation.

## Open Telematics API Server Security Requirements

**TLS Configuration**

The TLS security for Open Telematics API servers is of paramount importance. All of the confidentiality and integrity
protections are relying on this layer. For this reason, Open Telematics API servers must ensure that their HTTPS / TLS
configurations are of the highest quality. Following the [Qualys SSL Labs
Guide](https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices) is reccomended.  The automated
tool, also by Qualys SSL Labs, at [https://www.ssllabs.com/ssltest/](https://www.ssllabs.com/ssltest/) will report a
'letter grade'; it is expected that TSPs will have letter grades of 'A' or higher according to that tool.

**Whitelist HTTP Methods**

This API specification (in *APIBlueprint*) has a complete list of all allowable *HTTP methods* for each resource/'end
point' of the Open Telematics API. Open Telematics server implementations should use the list of methods as a whitelist
to filter incoming requests before any additional processing.

**Rate-limit API Requests**

Since every request to the Open Telematics API must be authenticated it is possible to rate-limit Open Telematics API
requests per authenticated user. Vendors should implement rate limits on overall API requests per authenticated user,
e.g. to avoid one user exhausting server resources of others; however, vendor must not rate-limit any Open Telematics
API implementations to rates below what is offered through their other API services for telematics data.

**Prevent Brute-Forcing**

Authentication (for this version of the API) is tied exclusively to HTTP Basic in each request. This means that each and
every API endpoint is an opportunity to brute force any of the user credentials. Open Telematics server implementors
must enforce a global rate-limit on authentication attempts for each user. Implementors may also want to consider other
mitigations against brute-force attacks on credentials; c.f. [the OWA page on Blocking Brute Force
Attacks](https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks).

**Prevent Server-Error Stacktraces**

Open Telematics server implementors must ensure that their software is deployed such that it does not include stack
traces in any response; e.g. no stacktraces in a 500 server error response.

**Prevent Resource Exhaustion by Slow-posting**

Open Telematics server implementors must ensure that, when receiving data from clients, the server implements short-
enough timeouts such that exhaustion of the server resources through malicious client 'slow-posting' is not possible.
For more details, consult this [Qualys blog post](https://blog.qualys.com/securitylabs/2011/11/02/how-to-protect-
against-slow-http-attacks).

**Input Sanitization**

Open Telematics server implementors must employ input sanitization when ingesting any data, i.e. for the `POST`, `PUT`,
`PATCH` methods. This API uses exclusively JSON for data serialization; therefore, at a minimum all input data should be
verified as valid JSON before being further processed. Furthermore, this specification includes generated JSON schema
for the expected inputs and so additional verification that the input JSON conforms to the expected schema can also be
performed before further processing is performed.

## Open Telematics API Client Security Requirements

**Certificate Pinning**

Because the confidentiality of credentials is only protected by TLS in this version, it is
very important that all Open Telematics API clients must be configured such that substitution of
any TLS certificates results in a failure to establish any connections
to the Open Telematics API server.

All clients must implement certificate pinning. i.e. All client implementations will pass the tests, 5.4-5.6, for
certificate pinning in the [OWASP MASVS](https://www.owasp.org/index.php/OWASP_Mobile_Security_Testing_Guide).

# Working With Dates

When exchanging dates as parameters to API methods or in responses from the API, you must ensure that
they are formatted properly as an ISO 8601 string (format
`yyyy-MM-ddTHH:mm:ss.fffZ`). In addition, all dates will have to first be
converted to UTC in order to ensure time zone information and daylight
savings times are accounted for correctly.

# Working with Time-Based Queries

There are many API endpoints which support searches of data based on a time range. In all cases, the time rage specified
by a pair of `start` and `stop` parameters represents an inclusive-exclusive time range. i.e. a time period which
includes the moment in time given by `start` and all times up-to but not including the moment in time given by `stop.`

The matching performed in all of these searches will be a time-intersection. i.e. the objects will be returned in search
results if their associated time periods (however defined) have any intersection with the inclusive-exclusive time range
given by the pair of `start` and `stop` parameters.

Objects may have multiple time periods associated with them; e.g. events recorded and transmitted by TSPs may have the
times at which the event was created, when it was recorded and/or when it was made available by the TSP to the motor
freight carrier. Unless otherwise specified, the time period of objects against which matching is performed will be the
*creation times*. Furthermore, implementors are required to ensure that the creation times of any objects are preserved
through all data transfers, i.e. that the creation times are not modified after initial recording at the telematics
devices in the field.

In the special case of matching against an object with a single time field, *instantaneous events* the object will be
returned if its instantaneous time value is within the inclusive-exclusive time range given by the pair of `start` and
`stop` parameters.

# Working With Locations

When exchanging locations as parameters to API methods or in responses from the API, you must ensure that they are
formatted as a latitude+longitude pair (format `[-]aaa.aaaaaaa [-]ooo.ooooooo`). Positive in the first component,
Latitude, indicates North (N) and East (E) in the second component, Longitude.

Note that all locations assigned to objects by the TSP in the OTAPI are done so on a best-effort basis. Different TSPs
have different rates of location update, different accuracies and different means of mapping a previously known location
into events after the known location (e.g. prediction vs. interpolation). This Open Telematics API draft does not make
any specifications about how often, how accurate or any other statements about how geographic locations must be assigned
to objects by the TSP.

# Working with *Feed Follow* Queries

There are endpoints of the API which are intended to be polled by clients so that new data (data newer than the previous
query) is returned. Theses *Feed Follow* endpoints are intended to assist in real-time client applications.

In some cases, the clients require that no data is ever missed by following (polling the endpoint); however, due to the
nature of telematics systems there can be a high latency between time of creation and time of delivery to the TSP. Hence
there is a non-trivial cost associated with providing endpoints that can ensure that no data is missed in following.
e.g. the *Follow a Feed of Duty Status Logs* endpoint below.

Unless stated otherwise, all *Feed Follow* endpoints will be such that no data is missed by following; including cases
of very high latency between data creation and delivery. Special exceptions will be noted on the endpoints for the cases
where the clients require that they have the newest information and are not concerned with ensuring that no data is
missed.

# Error States

The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

# Pagination

Where requests may return large collections and where the collections to be returned are presumed to be static the API
will include support for pagination of requests. The scheme for pagination closely follows [the pagination scheme of github](https://developer.github.com/v3/#pagination).

Requests that are paginated will return 50 items by default. The `page` parameter can be used to access later pages;
it defaults to the first page, page *1*. A custom number of items can be requested with the `count` parameter.

The total number of elements available is returned in the `X-Total-Count` response header.

# Server Performance

This API is intended to be integrated into motor freight carriers back end operations systems; therefore, there are
performance requirements to be considered as well. The API has been modeled in terms of use cases by the motor freight
carriers (see below). Each of these use cases can be considered to be executing concurrently in the motor freight
carrier. This has important design implications. For example, if a motor freight carrier has 10,000 trucks and makes
requests regarding their location once a minute this would imply 10,000 method invocations per minute with a relatively
small return data point. Other methods such as vehicle histories will have larger return data sets and require more
server side processing but would not be expected to be called with a high frequency. Given that it is not possible to
understand how these methods might be used by motor freight carriers in a final implementation it is difficult to
provide concrete performance metric requirements at this stage. Instead, implementors should consider this per-truck
scaling and design accordingly. i.e. consider that fleets can have more than 100,000 trucks and that some API endpoints
in this specification will be called rapidly (1 request per minute) whereas others will be called infrequently (1
request per day).

This specification does not go into implementation specific design decisions which are up to the individual TSPs since
such decisions are heavily dependent on their architecture. It is, however, strongly recommended that the TSPs consider
building-in performance features such as request queueing and request rate limiters to provide a stable and robust
solution. It is also recommended that the TSPs provide information on the frequency of updates for data feed
subscriptions such as the vehicle feed so the consumers can make appropriate design decisions.

# Unknown Drivers

For the elements of Open Telematics API which are concerned with Driver log events, or other driver-associated data,
there needs to be a concept of an 'unknown driver'. Indeed this concept is part of the ELD mandate. In Open Telematics
API objects: `driverID` references to the unknown driver is represented by `null`.

# Provider Identifiers

An important use case of the Open Telematics API by motor freight carriers is to run 'mixed fleets' where there are more
than one TSP's service integrated concurrently. In such a seployment we can imagine possible issues with duplicated data
or conflicts.

To prepare a solution to these problems, this specification includes provisions to identify the source of all data by a
'Provider ID'. Implementors are required to choose a unique identifier and assign it to all 'Provider ID' fields in all
data structures where it is included in this specification. We reccommend that TSPs use their domain (e.g.
`api.provider.com`) which should be sufficiently unique; however, TSPs can elect to use whatever identifier they like
but it should be 1) recognizable as associated with that TSP and 2) remain constant throughout the lifetime of the TSP's
service.

# Extending This API

The Open Telematics API is intended to enable motor freight carriers to be able to substitute TSPs (either concurently
or as fail-overs). This, of course, means that OTAPI must include only the most common elements of all the TSPs (so-
called Lowest Common Denominator).

However, each TSP has their own special value-add and, in some cases, the motor freight carriers would rather have
access to this special value-add via OTAPI rather than include parallel integrations with SDKs in their operations.
Unique vehicle performance data is a good example of this, where it is more useful embedded with the other events in the
TSP stream.

Thus, extensions to the API will be necessary and in preparation for this the data models specified in the current API
have been left 'open'. i.e. the addition of data fields to the definitions of the objects which are returned by OTAPI
according to this specification will not cause validation errors by clients which are following the JSON schema in this
specification.

* Adding addional field/members to the data objects, when the data is needed by a motor freight carrier is fine
* Adding additional possible values to enumerations is not a valid extension to the OTAPI
* Adding additional endpoints/methods is not a valid extension to the OTAPI

In cases where enumerations need to be changed and additional endpoints need to be added, this should be approached by
changing the OTAPI upstream -- also, ideally, adding fields should also be done by suggesting changes upstream.

# Localization

The Open Telematics API is ready to be used in locales other than the United States (English-speakers). To enable
display and interpretation of data in languages other English (US, `en_US`) implementors may provide translations of the
descriptions of the enumerated constants in the API.

The localization does not apply to units of measure. In all cases the Open Telematics API will use SI units. Nor does
the localization apply to arbitrary strings in data objects of the API such as messages for display in vehicles or
comment fields.

Requests to the Translation `/i18n` endpoint (see below for more details) shall include the request header `Accept-
Language: `. If no request header is present then `Accept-Language: en` will be assumed.

Open Telematics API implementors choose which languages they will support. If the `Accept-Language: ` request header
specifies a language which is unsupported by the Open Telematics API instance, then a `406` (Not Acceptable) response
will returned. Implementors must support `Accept-Language: en` and return a complete mapping -- a sample of which is
provided below for convenience in the sample response to `GET /api{version}/i18n`.

# Telematics API Use Cases by Motor Freight Carriers

The Open Telematics API is envisioned to be complete enough that motor freight carriers can use these APIs instead of
the proprietary TSP APIs -- while still connecting-to TSP-hosted servers and hence still using the same provider. In the
interest of ensuring that the APIs are _useful_ to their intended users (motor freight carriers) we will capture -- and
organize -- the API by these use cases. See the sections below for the API endpoints in those categories. For ease of
reference, we summarize the use cases here:

***Check Provider's State of Health***

Users of telematics that is highly integrated into their operations need assurances of the state of health of the
Provider's services.

***Data Export***

Motor freight carriers want to export all data from a TSP for a given time period. Where 'all data' for the purposes of
this specification is all the data specified here and does not include any other proprietary data structures designed
and employed by the TSP. These data exports could be used by carriers to complete mandatory processes during times of
TSP outage or for research purposes offline or to restore data -- although this last potential use is _not_ a use case
we aim to support here please see below on 'data import.'

***Driver Availability***

Motor freight carriers need to understand the availability of their drivers -- within the current regulatory context of
those drivers -- so that the carrier can ensure regulatory compliance and, more importantly, driver safety.

***Driver Route & Directions Communication***

Motor freight carriers update their Driver's destination and route during their trip. This allows them to react to
changing conditions in weather, the needs of regulatory restrictions on hours, optimizing follow-on activities after a
trip, etc.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

***Driver Route & Directions Start***

Motor freight carriers plan destinations and routes for their drivers and inform the drivers of the plan via the in-cab
components of a telematics system.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

***Driver Route and Directions Done***

Motor freight carriers receive notifications when Drivers have completed their trip.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

***Driver Messaging by Geo-Location***

Motor freight carriers use telematics systems to message their drivers for various reasons, not the least of which is to
notify the drivers of dangerous weather conditions in their area.

***Driver Messaging by Vehicle***

Motor freight carriers also message their drivers by sending messages directly to a vehicle.

***Vehicle Location Time History Tracking***

Motor freight carriers use telematics fleet Location Time History for multiple 'fleet dynamics modeling' use cases such
as: Fuel Purchase Prediction, Fuel Consumption Performance Tracking, and Fleet Maintenance Planning.

***Human Resources Process: Payroll***

Motor freight carriers use telematics systems to assist in payroll processing. This enables efficiencies at scale that
are important to modern motor freight carrier operations.

***Human Resources Process: Accident Report***

Motor freight carriers use telematics systems to monitor their fleets for accidents.

***Carrier Custom Business Intelligence***

Motor freight carriers use telematics systems for multiple, custom, business intelligence purposes where the overall
health of their fleet is considered and fed into their own proprietary models.

***Compliance and Safety Monitoring***

Motor freight carriers use telematics systems to monitor compliance and safety for their operations.

***In-Field Maintenance & Repair***

Motor freight carriers use telematics systems to plan (and react to) maintenance needs of their fleets.

## Data Structures

### Open Telematics Data Model Objects (object)

All the objects that follow are forward definitions of the data object types used in the API.

Note 1: due to the way the apiary documentation renderer works, this section will not be visible when rendered there.
See the *Open Telematics Data Model* for a section designed to be rendered in apiary.

Note 2: And this object definition exists just to tell you about that limitation.

Note 3: Also, any descriptions put on these data structures will not get rendered properly, so consult the *Open
Telematics Data Model* for object descriptions as well.

### Annotation Log (object)

+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this log.
+ comment           : `note: something noteworthy`       (required, string) - The annotation text associated with the log.
+ dateTime          :             `2019-04-05T02:04:16Z` (required, string) - Date and time for this annotation log

### Compliance Location (object)

+ location          :         ` 37.4224764 -122.0842499` (required, string) - the lat long encoding of this location
+ identifiedPlace   :                         `New York` (string) - place name of the identified geo-location
+ identifiedState   :                               `NY` (string) - state/province abbreviate of identified geo-location
+ distanceFrom      :                             `5000` (number) - distance from the identified geo-location, in m
+ directionFrom     :                              `NNE` (string) - cardinal direction from the identified geo-location

### Duty Status Log (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ annotations                                            (array[Annotation Log], fixed-type) - The list of AnnotationLog(s) which are associated with this log.
+ coDrivers         : `A87FF679A2F3E71D9181A67B7542122C`, `E4DA3B7FBBCE2345D7772B0674A318D5` (array[string], fixed-type) - The list of the co-driver User(s) for this log; may only be populated in day end log events
+ dateTime       :                `2019-04-05T02:04:16Z` (required, string) - Date and time from the telematics device
+ vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this log.
+ driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this log.
+ distanceLastValid :                                117 (required, number) - The distance in km traveled since the last valid latitude, longitude pair the ELD measured with required accuracy in the ELD mandate
+ editDateTime                                           (string) - The date and time the log was edited. If the log has not been edited, this will not be set.
+ eventRecordStatus :              `RECORDSTATUS_ACTIVE` (required, enum[string]) - The record status number of this log

    + Members
        + `RECORDSTATUS_ACTIVE`                       - Active
        + `RECORDSTATUS_INACTIVE_TO_CHANGED`          - Inactive -> Changed
        + `RECORDSTATUS_INACTIVE_TO_CHANGE_REQUESTED` - Inactive -> Change Requested
        + `RECORDSTATUS_INACTIVE_TO_CHANGE_REJECTED`  - Inactive -> Change Rejected

+ eventType         :      `EVENTTYPE_LOGINOUT_ACTIVITY` (required, enum[string]) - The event type number of this log. (Table 6; 7.25 of the ELD Final Rule)

    + Members
        + `EVENTTYPE_CHANGE_DUTYSTATUS`         - A change in driver's duty-status
        + `EVENTTYPE_INTERMEDIATE_LOG`          - An intermediate log
        + `EVENTTYPE_CHANGE_PERSONAL_OR_YM`     - A change in driver's indication of authorized personal use of CMV or yard moves
        + `EVENTTYPE_CERT_RECORDS`              - A driver's certification/re-certification of records
        + `EVENTTYPE_LOGINOUT_ACTIVITY`         - A driver's login/logout activity
        + `EVENTTYPE_CMV_POWERUPDOWN`           - CMV's engine power up / shut down activity
        + `EVENTTYPE_MALFUNCTION_OR_DIAGNOSTIC` - A malfunction or data diagnostic detection

+ location                                               (required, Compliance Location) - An object with the location information for the log data, more details than lat/long for compliance purposes
+ malfunction       :                 `MALFUNCTION_NONE` (required, enum[string]) - The DutyStatusMalfunctionType of the DutyStatusLog record.

    + Members
        + `MALFUNCTION_DIAGNOSTIC`                   - In a diagnostic state.
        + `MALFUNCTION_DIAGNOSTICMANUALPOSITION`     - Combination of ManualPosition and Diagnostic
        + `MALFUNCTION_MALFUNCTION`                  - In a malfunction state.
        + `MALFUNCTION_MALFUNCTIONMANUALPOSITION`    - Combination of ManualPosition and Malfunction
        + `MALFUNCTION_MANUALPOSITION`               - User has inputted a manual address for the log during a position compliance diagnostic event
        + `MALFUNCTION_NONE`                         - No malfunction or diagnostic present or cleared.
        + `MALFUNCTION_SYSTEMDIAGNOSTICCLEAR`        - System has determined that the diagnostic is cleared. Not exported to FMCSA.
        + `MALFUNCTION_SYSTEMDIAGNOSTICCLEARDRIVING` - System has determined that the diagnostic is cleared and the vehicle was in motion. Used for PowerCompliance.
        + `MALFUNCTION_USERDIAGNOSTICCLEAR`          - User has cleared the diagnostic.
        + `MALFUNCTION_USERMALFUNCTIONCLEAR`         - User has cleared the malfunction.

+ origin            :                 `ORIGIN_AUTOMATIC` (required, enum[string]) - The DutyStatusOrigin from where this log originated.

    + Members
        + `ORIGIN_AUTOMATIC`  - Automatic recorded by device
        + `ORIGIN_MANUAL`     - Manual entry by driver.
        + `ORIGIN_OTHERUSER`  - Other authenticated user.
        + `ORIGIN_UNASSIGNED` - Unassigned driver.

+ parentId          : `D6AB4B1A2E51C28CB32BFE8982D42259` (string) - The Id of the parent DutyStatusLog. Used when a DutyStatusLog is edited. When returning history, this field will be populated.
+ sequence          :                                 23 (required, number) - The sequence number, which is used to generate the sequence ID.
+ state             :                     `STATE_ACTIVE` (required, enum[string]) - The DutyStatusState of the DutyStatusLog record.

    + Members
        + `STATE_ACTIVE`    - The log is active and has been accepted by the driver.
        + `STATE_INACTIVE`  - The log is inactive. It has been removed or it is the modification history of a log.
        + `STATE_REJECTED`  - The log is a rejected edit request from another user.
        + `STATE_REQUESTED` - The log is a pending edit request from another user.

+ status            :                         `STATUS_D` (required, enum[string]) - The DutyStatusLogType representing the driver's duty status.

    + Members
        + `STATUS_ADVERSEWEATHER`                - Adverse weather and driving conditions exemption.
        + `STATUS_AUTHORITY`                     - Authority status.
        + `STATUS_CERTIFY`                       - Daily certify record.
        + `STATUS_CONNECTED`                     - System log for device power connection.
        + `STATUS_D`                             - Drive status.
        + `STATUS_DATARECORDINGCOMPLIANCE`       - Storage capacity is reached, or missing data elements exist. Applies to Malfunction or Diagnostic.
        + `STATUS_DATATRANSFERCOMPLIANCE`        - Transfer of data fails to complete. Applies to Malfunction or Diagnostic.
        + `STATUS_DISCONNECTED`                  - System log for device power disconnection.
        + `STATUS_ENGINEPOWERUP`                 - Engine power up record.
        + `STATUS_ENGINEPOWERUPPC`               - Engine power up in PC record.
        + `STATUS_ENGINESHUTDOWN`                - Engine shutdown record.
        + `STATUS_ENGINESHUTDOWNPC`              - Engine shutdown in PC record.
        + `STATUS_ENGINESYNCCOMPLIANCE`          - Occurs when engine information (power, motion, distance, and hours) cannot be obtained by ELD. Applies to Malfunction or Diagnostic.
        + `STATUS_EXEMPTION16H`                  - Exemption 16 hour.
        + `STATUS_EXEMPTIONOFFDUTYDEFERRAL`      - Exemption off duty deferral.
        + `STATUS_INT_D`                         - Intermediate Drive Event.
        + `STATUS_INT_PC`                        - Intermediate Personal Conveyance Event.
        + `STATUS_LOGIN`                         - User login record.
        + `STATUS_LOGOFF`                        - User logout record.
        + `STATUS_MISSINGELEMENTCOMPLIANCE`      - Missing data elements. Applies to Malfunction or Diagnostic.
        + `STATUS_OFF`                           - Off-duty status.
        + `STATUS_ON`                            - On-duty status.
        + `STATUS_OTHERCOMPLIANCE`               - Other instances of Malfunction or Diagnostic.
        + `STATUS_PC`                            - Personal conveyance driver status.
        + `STATUS_POSITIONINGCOMPLIANCE`         - ELD continually fails to acquire valid position measurement. Applies to Malfunction.
        + `STATUS_POWERCOMPLIANCE`               - Engine power status engages ELD within 1 minute. Applies to Malfunction or Diagnostic.
        + `STATUS_SB`                            - Sleeper berth status.
        + `STATUS_SITUATIONALDRIVINGCLEAR`       - YM, PC, or WT clearing event.
        + `STATUS_TIMINGCOMPLIANCE`              - When ELD date and time exceeds 10 minute offset from UTC. Applies to Malfunction.
        + `STATUS_UNIDENTIFIEDDRIVINGCOMPLIANCE` - More than 30 minutes of driving with unidentified driving. Applies to Diagnostic.
        + `STATUS_WT`                            - Wait time oil well driver status.
        + `STATUS_YM`                            - Yard move driver status.

+ verifyDateTime                                         (string) - The date and time the log was verified. If the log is unverified, this will not be set. This is the same as log certification. This will be the last certification date.
+ multidayBasis     :                                  0 (required, number) - Multiday basis (7 or 8) used by the motor carrier to compute cumulative duty hours
+ outputFileComment : `fake Duty Status Log for testing` (required, string) - A textual field that may be populated with information pertaining to the creation of an ELD output file

+ eventDataChecksum                                      (required, string) - The hexidecimal value result of a bitwise exclusive OR(XOR) operation using Table 3 of the ELD mandate

### Stop Geographic Details (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ stopName          :                 `pickup place 101` (required, string) - a name for this location
+ address           :                  `13 Sycamore Ave` (string) - an optional street address
+ comment                                                (string) - an optional comment
+ location          :         ` 37.4224764 -122.0842499` (required, string) - the location of the delivery date at this stop
+ entryArea                                              (array[string], fixed-type) - optional geographic location polygon detailing the entryway area for this stop

### Vehicle Location Time (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this Location Time
+ dateTime          :             `2019-04-05T02:04:16Z` (required, string) - time
+ location          :         ` 37.4224764 -122.0842499` (required, string) - location

### Vehicle Location Time History (object)

+ data                                                   (required, array[Vehicle Location Time], fixed-type) - array of Location Times representing the vehicle's location over time.
+ timeResolution    :            `TIMERESOLUTION_NOTMAX` (required, enum[string]) - a status variable to indicate if this time history has a higher available resolution at the TSP
    + Members
        + `TIMERESOLUTION_MAX` - This is at the highest available time resolution
        + `TIMERESOLUTION_NOT_MAX` - This is not

### Coarse Vehicle Location Time History (Vehicle Location Time History)

+ timeResolution    :               `TIMERESOLUTION_MAX` (required, enum[string]) - a status variable to indicate if this time history has a higher available resolution at the TSP
    + Members
        + `TIMERESOLUTION_MAX` - This is at the highest available time resolution
        + `TIMERESOLUTION_NOT_MAX` - This is not at the highest available time resolution

### GPS Quality (enum[string])

+ `GPSQUALITY_FINELOCK` - gps receiver had fine lock
+ `GPSQUALITY_OTHER` - gps receiver had fix other than fine lock

### Cruise Status (object)

+ ccSwitch          :                             false  (required, boolean) - cruise control switch status at time of event
+ ccSetSwitch       :                             false  (required, boolean) - cruise control set switch status at time of event
+ ccCoastSwitch     :                             false  (required, boolean) - cruise control coast switch status at time of event
+ ccClutchSwitch    :                             false  (required, boolean) - cruise control clutch switch status at time of event
+ ccCruiseSwitch    :                             false  (required, boolean) - cruise control cruise switch status at time of event
+ ccResumeSwitch    :                             false  (required, boolean) - cruise control resume switch status at time of event
+ ccAccelerationSwitch:                           false  (required, boolean) - cruise control acceleration switch status at time of event
+ ccBrakeSwitch     :                             false  (required, boolean) - cruise control brake switch status at time of event
+ ccSpeed           :                                 1  (required, number) - cruise control commanded speed at the time of event, in m/s

### Ignition Status (object)

+ ignitionAccessory :                             false  (required, boolean) - ignition accessory state at time of event
+ ignitionRunContact:                             false  (required, boolean) - ignition run contact state at time of event
+ ignitionCrankContact:                           false  (required, boolean) - ignition crank contact state at time of event
+ ignitionAidContact:                             false  (required, boolean) - ignition aid contact state at time of event

### Vehicle Flagged Event (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ eventStart        :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the start of the event
+ eventEnd          :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the end of the event
+ vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this event
+ eventComment      : `event type XXXX, (other details)` (string) - a free-form comment field. Can be used for e.g. identifying the type of event or other unstructured data
+ trigger                                                (required, enum[string]) - type flagged event
    + Members
        + `FLAGGEDTYPE_ROLL_STABILITY` - Roll stability flagged event
        + `FLAGGEDTYPE_SUDDEN_START` - Sudden start flagged event
        + `FLAGGEDTYPE_SUDDEN_STOP` - Sudden stop flagged event
        + `FLAGGEDTYPE_COLLISION` - Collision flagged event
        + `FLAGGEDTYPE_ONBOARD_RECORDING` - onboard recording flagged event
+ gpsSpeed                                               (number) - speed of vehicle at time of event, in m/s
+ gpsHeading                                             (number) - heading of vehicle according to GPS at time of event, in degrees
+ gpsQuality                                             (GPS Quality) - the GPS fix quality at the time of this event
+ ecmSpeed                                               (required, number) - speed of vehicle at time of event, in m/s
+ engineRPM                                              (required, number) - engine RPMs at time of event, in revolutions per minute
+ accelerationPercent:                                0  (required, number) - vehicle commanded acceleration, in percent
+ seatBelts         :                               true (boolean) -  Were seat belts engaged at time of event
+ cruiseStatus                                           (optional, Cruise Status) - the cruise status at the time of this event
+ parkingBreak      :                             false  (optional, boolean) - parking break status at time of event
+ ignitionStatus                                         (required, Ignition Status) - the ignition status at the time of the event
+ forwardVehicleSpeed:                                1  (required, number) - vehicle speed according to tire rotation, in m/s
+ forwardVehicleDistance:                           100  (required, number) - vehicle distance traveled since cycled, in m
+ forwardVehicleElapsed:                              2  (required, number) - vehicle forward travel elapsed time, in s
+ odometer                                               (required, number) - Odometer reading at time of event, in m

### Region Specific Breaks Rules (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver with the region specific break rules.
+ activeFrom        :             `2019-04-05T02:04:16Z` (required, string) - The date and time the break rules take effect
+ activeTo          :             `2019-04-05T02:04:16Z` (string) - The date and time the break rules stop taking effect, if left blank then the rules apply in perpetuity
+ country           :                               `CA` (string) - short code for the country of the region dictating the specific break rules
+ region            :                               `ON` (string) - short code for the country's region/state/province/territory dictating the specific break rules

### Region Specific Waivers (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver with the region specific waiver.
+ country           :                               `CA` (string) - short code for the country of the region dictating the specific waiver
+ region            :                               `ON` (string) - short code for the country's region/state/province/territory dictating the specific waiver
+ waiverDay        :             `2019-04-05T02:04:16Z`  (required, string) - The date of the effect of the waiver -- time is ignored

### Performance Thresholds (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ activeFrom        :             `2019-04-05T02:04:16Z` (required, string) - The date and time these thresholds take effect
+ activeTo          :             `2019-04-05T02:04:16Z` (string)           - The date and time these thresholds stop taking effect, if left blank then the rules apply in perpetuity
+ rpmOverValue                                           (number)           - the configured RPM threshold, above which engine RPM readings are considered 'over', in revolutions per minute
+ overSpeedValue                                         (number)           - the configured speed threshold, above which speed readings are considered 'over', in m/s
+ excessSpeedValue                                       (number)           - the configured speed threshold, above which the speed readings are considered 'excess', in m/s
+ longIdleValue     :                                300 (number)           - the configured time threshold, beyond which time spent in idle will be considered 'long', in seconds
+ hiThrottleValue                                        (number)           - the configured throttle threshold, above which throttle values are considered 'hi'

### Vehicle Performance Event (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ eventStart        :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the start of the event (engine start)
+ eventEnd          :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the end of the event (engine stop)
+ vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this event
+ eventComment      : `performance event type XXXX, (other details)` (string) - a free-form comment field. Can be used for e.g. identifying the type of event or other unstructured data
+ hours             :                                  6 (required, number) - the number of hours elapsed over this Vehicle Performance Event, in hours
+ thresholds                                             (required, Performance Thresholds) - the thresholds that were active during this event
+ odometerStart                                          (required, number) - the vehicle odometer reading at the start of this event, in m
+ odometerEnd                                            (required, number) - the vehicle odometer reading at the end of this event, in m
+ engineTime                                             (required, number) - the total amount of time spent with engine on during this event, in seconds
+ movingTime                                             (required, number) - the total amount of time spent moving during this event, in seconds
+ startFuel                                              (required, number) - vehicle fuel level total (sum of both tanks if present) at start of this event
+ endFuel                                                (required, number) - vehicle fuel level total (sum of both tanks if present) at end of this event
+ brakeApplications                                      (required, number) - the total number of applications of the vehicle brakes during this event
+ engineLoadStopped                                      (required, number) - the average engine load while the vehicle was stopped during this event, in percent
+ engineLoadMoving                                       (required, number) - the average engine load while the vehicle was moving during this event, in percent
+ headlightTime                                          (required, number) - the total amount of time spent with headlights on during this event, in seconds
+ speedGovernorValue                                     (required, number) - this vehicles particular speed governor setting, in m/s
+ overRpmTime                                            (number)           - the total amount of time the vehicle spent moving while over the RPM threshold during this event, in seconds
+ overSpeedTime                                          (number)           - the total amount of time spent over the speed threshold during this event, in seconds
+ excessSpeedTime                                        (number)           - the total amount of time spent over the excess speed threshold, in seconds
+ longIdleTime                                           (number)           - the total amount of time spent in 'long' idle during this event, in seconds
+ shortIdleTime                                          (number)           - the total amount of time spent in idle (not 'long') during this event, in seconds
+ shortIdleCount                                         (number)           - the total count of times when the vehicle entered an idle state, where the idle time did not exceed the 'long' threshold
+ longIdleFuel                                           (number)           - the total amount of fuel used by the vehicle during idle times whose durations were 'long', in litres
+ shortIdleFuel                                          (number)           - the total amount of fuel used by the vehicle during idle times whose durations were not 'long', in litres
+ cruiseEvents                                           (number)           - the total count of cruise engagements during this event
+ cruiseTime                                             (number)           - the total amount of time spent in cruise during this event, in seconds
+ cruiseFuel                                             (number)           - the total amount of fuel consumed in cruise during this event, in seconds
+ cruiseDistance                                         (number)           - the total distance covered in cruise during this event, in meters
+ topGearValue                                           (number)           - this vehicle's particular top gear
+ topGearTime                                            (number)           - the total amount of time spent while in top gear during this event, in seconds
+ topGearFuel                                            (number)           - the total amount of fuel consumed while in top gear during this event, in litres
+ topGearDistance                                        (number)           - the total distance covered while in top gear during this event, in meters
+ ptoFuel                                                (number)           - the total amount of fuel dispensed with 'power take off' liquid tanker trailer systems, in litres
+ ptoTime                                                (number)           - the total amount of time dispensing with 'power take off' liquid tanker trailer systems, in seconds
+ seatBeltTime                                           (number)           - the total amount of time spent with seatbelt engaged during this event, in seconds
+ particulateFilterStatus                                (enum[string])     - the regen status at the end of this event
    + Members
        + `FILTERSTATUS_REGEN_NEEDED' - Filter regen needed
        + `FILTERSTATUS_FORCED_REGEN_WILL_HAPPEN' - Filter forced regen will happen
        + `FILTERSTATUS_ACTIVE_REGEN_START' - Filter active regen started
        + `FILTERSTATUS_PASSIVE_REGEN_START' - Filter passive regen started
        + `FILTERSTATUS_ACTIVE_REGEN_END' - Filter active regen ended
        + `FILTERSTATUS_PASSIVE_REGEN_END' - Filter passive regen ended
+ exhaustFluidLevel                                      (number)           - DEF additive levels at the end of this event, in litres
+ overspeedLowThrottle                                   (boolean)          - the total amount of time spent over the speed threshold and simultaneously below the throttle threshold, in seconds
+ overspeedHiThrottle                                    (boolean)          - the total amount of time spent over the speed thresshold and simultaneously above the throttle threshold, in seconds
+ overrpmLowThrottle                                     (boolean)          - the total amount of time the vehicle spent moving while over the rpm threshold and simultaneously below the throttle threshold, in seconds
+ overrpmHiThrottle                                      (boolean)          - the total amount of time the vehicle spent moving while over the rpm threshold and simultaneously above the throttle threshold, in seconds
+ lkaActive                                              (boolean)          - Lane Keep Assist active status
+ lkaDisable                                             (boolean)          - Lake Keep Assist disable switch status
+ ldwActive                                              (boolean)          - Lane Departure Warning active status
+ ldwDisable                                             (boolean)          - Lane Departure Warning disabel switch status

### Vehicle Fault Code Event (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this event
+ location          :         ` 37.4224764 -122.0842499` (required, string) - location
+ eventComment      : `event type XXXX, (other details)` (string) - a free-form comment field. Can be used for e.g. identifying the type of event or other unstructured data
+ triggeredDate     :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the fault code being triggered
+ clearedDate       :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the fault code being cleared
+ occurences        :                                  1 (required, number) - the number of occurences of this fault
+ messageIdentifier                                      (required, number) - MID from J1939
+ parameterOrSubsystemIdType                             (required, enum[string]) - does *faultCodeParameterorSubsystemId* encode a PID or SID?
    + Members
        + `PIDORSID_PID` - This is a PID
        + `PIDORSID_SID` - This is a SID
+ faultCodeParameterorSubsystemId                        (required, number) - either the PID or SID , as in J1939
+ sourceAddress                                          (required, number) - SA from J1939
+ suspectParameterNumber                                 (required, number) - SPN from J1939
+ failureModeIdentifier                                  (required, number) - FMI from J1939
+ urgentFlag        :                              false (required, boolean) - is the fault urgent?
+ odometer                                               (required, number) - Odometer reading at time of event, in m
+ engineRpm                                              (required, number) - engine RPMs at time of event, in revolutions per minute
+ ecmSpeed                                               (required, number) - speed of vehicle at time of event, in m/s
+ cruiseStatus                                           (required, Cruise Status) - the cruise status at the trigger time of this fault code event
+ ignitionStatus                                         (required, Ignition Status) - the ignition status at the trigger time of this fault code event
+ gpsQuality                                             (required, GPS Quality) - the GPS fix quality at the trigger time of this event
+ clearType                                              (enum[string]) - by what means was this fault cleared
    + Members
        + `CLEARTYPE_BYSYSTEMS` - cleared by systems
        + `CLEARTYPE_MANUALLYBACKOFFICE` - cleared manually in backoffice

### Flagged Vehicle Performance Event (Vehicle Fault Code Event)

### Driver (object)

+ id                : `A87FF679A2F3E71D9181A67B7542122C` (required, string) - The id of this Driver object
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ username                                               (required, string) - a username of this driver
+ driverLicenseNumber                                    (required, string) - the driver's license number
+ country           :                               `CA` (required, string) - short code for the country of the region dictating the specific break rules
+ region            :                               `ON` (required, string) - short code for the country's region/state/province/territory dictating the specific break rules
+ driverHomeTerminal                                     (string) - the home terminal of the driver

### Driver Performance Summary (object)

+ id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ eventStart        :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the start of this driver performance summary
+ eventEnd          :             `2019-04-05T02:04:16Z` (required, string) - Date and time of the end of this driver performance summary
+ driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver for this performance summary
+ distance                                               (number) - the total distance covered during this event, in m
+ fuel                                                   (number) - the total fuel consumed during this event, in litres
+ cruiseTime                                             (number) - the total time spent with cruise control engaged during this event, in seconds
+ engineLoadPercent                                      (number) - the average engine load percent during this event
+ overRpmTime                                            (number) - the total time the driver's vehicles spent moving while above rpm threshold, in seconds
+ brakeEvents                                            (number) - the number of break events during this event

### Vehicle (object)

+ id                : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The id of this Driver object
+ providerId        :                 `api.provider.com` (required, string) - The unique 'Provider ID' of the TSP.
+ name                                                   (string) - Vehicle name
+ cmvVIN                                                 (required, string) - the CMV VIN
+ licensePlate                                           (required, string) - the vehicle license plate

### Token Translation (object)

+ origin :                `Duty Status Log, malfunction` (string) - optional note of origin of token to be translated
+ comment : `Diagnostic, information for understanding sources of problems` (string) - optional comment for translators
+ msgid :                             `STATE_DIAGNOSTIC` (required, string) - The token which will be translated
+ msgstr :                                  `Diagnostic` (required, string) - The locale's representation (translation) of the token

### State of Health (object)

+ serviceStatus:        `SERVICESTATUS_OPERATIONAL`      (required, enum[string]) - the current status of the service
    + Members
        + `SERVICESTATUS_OPERATIONAL` - the service is operational
        + `SERVICESTATUS_DEGRADED_PERFORMANCE` - the service is operating, but with limitations
        + `SERVICESTATUS_PARTIAL_OUTAGE` - there are aspects of the service which are not presently available
        + `SERVICESTATUS_MAJOR_OUTAGE` - the service is unavailable
+ dateTime:    `2019-04-05T02:04:16Z`                    (required, string) - Date and time of this service status
+ factors: `upstream server operational`, `authentication service operational` (array[string], fixed-type) - a list of contributing factors to the current service status. Providers may use this to communicate details about loss of service

## Data Structures

### Open Telematics TSP Inbound Objects (object)

The objects below are forward definitions of the data object types used in sending data to the TSP in the API. These
objects do not need to have unique identification because they are processed by the server into changes to existing
objects or creating new objects. Because these are inbound objects, extra attention should be paid to restricting the
allowable space of values in these objects to enable robust input sanitization by implementors.

Note 1: due to the way the apiary documentation renderer works, this section will not be visible when rendered there.
See the *Open Telematics Data Model* for a section designed to be rendered in apiary.

Note 2: And this object definition exists just to tell you about that limitation.

Note 3: Also, any descriptions put on these data structures will not get rendered properly, so consult the *Open
Telematics Data Model* section for object descriptions as well.

Note 4 (who's counting these anyways?): as these are inbound objects we want lock-down the space of all possible
serializations to make the input processing of the server more robust. e.g. specifying content restrictions for strings
that should only contain timestamps. APIBlueprint doesn't provide a way to do this in MSON; but it is possible to add a
JSON Schema to an action which overides the JSON schema generated from the MSON. So, whereas these data structures
define the data types used for inbound objects, there is also corresponding JSON Schemas for endpoints accepting these
data type defined below. If you change one you should probably also change the other.

### Externally Sourced Route Stop Details (object)

+ stopName          :                 `pickup place 101` (required, string) - a name for the stop location
+ stopAddress       :                  `13 Sycamore Ave` (string) - an optional street address
+ stopLocation      :         ` 37.4224764 -122.0842499` (required, string) - the location of the stop
+ stopDeadline      :             `2019-04-05T02:04:16Z` (string) - optional time and date when the stop must be arrived at

### Externally Sourced Route Start Stop Details (Externally Sourced Route Stop Details)

+ startName         :                  `start place 202` (required, string) - a name for the start location
+ startAddress      :                    `11 Elm Street` (string) - an optional street address of the start
+ startLocation     :         ` 37.4224764 -122.0842499` (required, string) - the location of the start
+ routeAddInstructions :     `take trailers XXX and YYY` (string) - an optional comment with details about the route

### Externally Sourced Vehicle Display Messages (object)

+ subject                                                (string) - a brief 'subject-line' for this message
+ message                                                (required, string) - the message to be displayed to the driver

### Externally Sourced Stop Geographic Details (object)

+ comment                                                (string) - an optional comment
+ location          :         ` 37.4224764 -122.0842499` (required, string) - the location of the delivery date at this stop
+ entryArea                                              (array[string], fixed-type) - optional geographic location polygon detailing the entryway area for this stop

### Externally Triggered Duty Status Change (object)

+ dateTime          :             `2019-04-05T02:04:16Z` (required, string) - Date and time for this status change
+ location          :         ` 37.4224764 -122.0842499` (required, string) - An object with the location information for this status change.
+ status            :                `EXTTRIG_STATUS_ON` (required, enum[string]) - The status changed-to in this status change
    + Members
        + `EXTTRIG_STATUS_ON`  - The driver has changed status to on-duty
        + `EXTTRIG_STATUS_OFF` - The driver has changed status to off-duty

### Externally Sourced Driver Info (object)

+ username                                               (required, string) - a username of this driver
+ hoursWorked       :                              `1.5` (number) - the hours worked on-duty by this user so far today (on any duty at all)
+ driverLicenseNumber                                    (string) - the driver's license number
+ country           :                               `CA` (string) - short code for the country of the driver's license
+ region            :                               `ON` (string) - short code for the country's region/state/province/territory of the driver's license
+ driverHomeTerminal                                     (string) - the home terminal of the driver

### External TSP Portal User Management (object)

+ username          :                             `joe2` (string) - TSP portal username
+ password                                               (string) - user password
+ enabled           :                             `true` (boolean) - this user is enabled or disabled

# Group Use Case Check Provider's State of Health

Users of telematics that is highly integrated into their operations need assurances of the state of health of the
Provider's services.

The IT and operations staff responsible for system uptime want to query the Open Telematics API provider (TSP) Provider
State of Health. They expect to receive either an 'all-clear' response indicating that the provider is not aware of any
issues with its services at the moment of query or some details describing the contributing factors that have led to
less than optimal operation.

## Check Current State of Health                               [GET /api{version}/health/current]

Clients can request the current service status. The response to this query will be a data structure indicating
everything is good or showing some details as to why the service is not presently at 100%.

Clients must treat any response other than code 200 and code 401 as equivalent to `SERVICESTATUS_MAJOR_OUTAGE`.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | ALLOW         | ALLOW      | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (State of Health)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Check Past 30d State of Health                              [GET /api{version}/health/recents]

Clients can request the recent history of all service statuses. The response to this query will return all service
status records (i.e. those returned via *Check Current State of Health*) from over the past 30 days.

Clients must treat any response other than code 200 and code 401 as equivalent to `SERVICESTATUS_MAJOR_OUTAGE`.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | ALLOW         | ALLOW      | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + data (array[State of Health], fixed-type)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Data Export

Motor freight carriers want to export all data from a TSP for a given time period. Where 'all data' for the purposes of
this specification is all the data specified here and does not include any other proprietary data structures designed
and employed by the TSP. These data exports could be used by carriers to complete mandatory processes during times of
TSP outage or for research purposes offline or to restore data -- although this last potential use is _not_ a use case
we aim to support here please see below on 'data import.'

The IT staff and automated systems want to retrieve a complete record of all TSP-hosted data (with caveat notes above)
for a given time-period. They do this by querying for sets of the following data types over a given period of time:

* Vehicle
* Vehicle Location Time History
* Vehicle Flagged Event
* Vehicle Performance Event
* Performance Thresholds
* Stop Geographic Details
* Vehicle Fault Code Event
* Driver
* Duty Status Log
* Region Specific Breaks Rules
* Region Specific Waivers
* Driver Performance Summary
* State of Health

The carriers would also like to be able to use the exported data in an 'import' to a second TSP or new instances of the
same TSP. This is not an use case which this specification will attempt to support; however, we will aim to design the
data structures such that any TSP wanting to implement _import_ is enabled to do so (c.f. 'Provider ID').

The following methods are defined to enable clients to retrieve the entirety of all Telematics data from the TSP for a given time period.

The response to the request will include both time-varying objects (those that have time associated with them) and also
those that do not.

* For time-varying objects: the responses will only include whose associated time periods have an intesection with the
requested time period (as per the details of the *Working With Dates* section above);

* For non time-varying objects: the response will include all objects known to the TSP at the time of the request,
regardless of the time period requested as defined by `start` and `stop` query parameters (included on the endpoints for
API consistency under `/export/...`)

***Vehicle-Only Data Export***

To export data that does not deal with driver PII, the motor freight carrier can request sets of the following data
types (see below for details on how to request). As is noted in the access controls below, requests for these data types
deny access by the *Vehicle X* roles.

* Stop Geographic Details
* Performance Thresholds
* Vehicle
* Vehicle Location Time History
* Vehicle Flagged Event
* Vehicle Performance Event
* Vehicle Fault Code Event
* State of Health

## Export of all Vehicle objects                               [GET /api{version}/vehicles/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Vehicle], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Vehicle Location Time History objects         [GET /api{version}/fleet/locations/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Vehicle Location Time History], fixed-type) - array of all objects which match the date parameters in the query

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Vehicle Flagged Event objects                 [GET /api{version}/fleet/flagged_events/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Vehicle Flagged Event], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Vehicle Performance Event objects             [GET /api{version}/fleet/performance_events/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Vehicle Performance Event], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Performance Thresholds objects                [GET /api{version}/fleet/performance_thresholds/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Performance Thresholds], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Stop Geographic Details objects               [GET /api{version}/stops/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Stop Geographic Details], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Vehicle Fault Code Event objects              [GET /api{version}/fleet/faults/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Vehicle Fault Code Event], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Driver objects                                [GET /api{version}/drivers/{?start,stop,page,count}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Driver], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Duty Status Log objects                       [GET /api{version}/event_logs/{?start,stop,page,count}]

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Duty Status Log], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Region Specific Breaks Rules objects          [GET /api{version}/region_specific_breaks/{?start,stop,page,count}]

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Region Specific Breaks Rules], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Region Specific Waivers objects               [GET /api{version}/region_specific_waivers/{?start,stop,page,count}]

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Region Specific Waivers], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all Driver Performance Summary objects            [GET /api{version}/driver_performance_summaries/{?start,stop,page,count}]

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[Driver Performance Summary], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Export of all State of Health objects                       [GET /api{version}/health/{?start,stop,page,count}]

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search
    + page                             (optional, number) - the page to select for paginated response
        + Default: 1
    + count                            (optional, number) - the number of items to return
        + Default: 50


+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Headers

            X-Total-Count: {+totalCount}

    + Attributes (object)
        + data                             (required, array[State of Health], fixed-type) - array of all objects which match the date parameters in the query.

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Availability

Motor freight carriers need to understand the availability of their drivers -- within the current regulatory context of
those drivers -- so that the carrier can ensure regulatory compliance and, more importantly, driver safety.

Both personnel and semi-automated systems responsible for planning and assigning driver routes want to model the current
availability of a Driver; they retrieve all of the following 'driver availability factors' from that time up until the
current moment, from which the current driver availability can be calculated.

* Coarse Vehicle Location Time History
* Vehicle Flagged Event
* Duty Status Log

The same personnel and semi-automated systems will need to for breaks and exemption rules for drivers in those logs if
they operate in regions with specific break rules or waivers.

* Region Specific Breaks Rules
* Region Specific Waivers

In some cases, facilities systems want to set the driver status in cases where they are on-duty but not driving. To do
this their systems send data _to_ the TSPs.

* Externally Triggered Duty Status Change

## Retrieve Driver Availability Factors                        [GET /api{version}/drivers/{driverId}/availability_factors/{?start,stop}]

Clients can request all the factors contributing to driver availability for a given driver, over a given time period.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this status change.
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + dutyStatusLogs                                     (required, array[Duty Status Log], fixed-type) - The Duty Status Logs of the requested `driverId` for the requested time period [`start`, `stop`)
        + vehicleFlaggedEvents                               (required, array[Vehicle Flagged Event], fixed-type) - All Vehicle Flagged Events which are associated with the requested `driverId` and which occur within the requested time period [`start`, `stop`)
        + coarseVehicleLocationTimeHistory                   (required, Coarse Vehicle Location Time History) - The Coarse Vehicle Location Time History associated with the requested `driverId` for the requested time period [`start`, `stop`)

+ Response 400 (text/plain)

        Error: start or stop parameter invalid

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Check Break Rules and Waivers                               [GET /api{version}/drivers/{driverId}/breaks_and_waivers/{?start,stop}]

Clients can request any region-specific waivers and break-rules for a given driver that are applicable within a given
time period.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this status change.
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + breakRules                                             (required, array[Region Specific Breaks Rules], fixed-type) - the Region Specific Breaks Rules for this driver for the requested time period
        + waivers                                                (required, array[Region Specific Waivers], fixed-type) - the Region Specific Waivers for this driver for the requested time period

+ Response 400 (text/plain)

        Error: start or stop parameter invalid

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Send Custom-Integrated Duty Status Changes to the TSP     [PATCH /api{version}/drivers/{driverId}/duty_status]

Clients can trigger duty status changes for a given driver by pushing data to this endpoint.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | **DENY**      | ALLOW      | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this status change.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Triggered Duty Status Change)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallyTriggeredDutyStatusChange",
                "required": [
                  "dateTime",
                  "location",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "dateTime": {
                    "type": "string",
                    "description": "Date and time for this status change",
                    "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$",
                    "example": "2019-04-05T02:04:16Z"
                  },
                  "location": {
                    "type": "string",
                    "description": "An object with the location information for this status change.",
                    "example": "37.4224764 -122.0842499"
                  },
                  "status": {
                    "enum": [
                      "EXTTRIG_STATUS_ON",
                      "EXTTRIG_STATUS_OFF"
                    ],
                    "type": "string",
                    "description": "The status changed-to in this status change",
                    "example": "EXTTRIG_STATUS_ON"
                  }
                }
            }

+ Response 200 (application/json)

+ Response 204

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Route & Directions Communication

Motor freight carriers update their Driver's destination and route during their trip. This allows them to react to
changing conditions in weather, the needs of regulatory restrictions on hours, optimizing follow-on activities after a
trip, etc.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

Both personnel and semi-automated systems responsible for planning and assigning driver routes want to update the
Driver's destination and route during a trip. They retrieve the driver availability factors for the time period from the
driver's start of route up until the present (see *Retrieve Driver Availability Factors* above for more details.)

In the process of updating the Driver's destination and route, the motor freight carrier sends the following _to_ the
TSP

* Stop Geographic Details
* Stop Details

## Update Driver's Route Stop                                  [PUT /api{version}/vehicles/{vehicleId}/routes/{routeId}]

Clients can update a Driver's destination; sending data to this endpoint, using a previously obtained `routeId` will
change the destination of the route, hence also changing the stopId associated with the route.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id to associate this route to
    + routeId       : `c6d2ff2e69c212d4eb9d64b629a46689` (required, string) - the id of the route created, to be used for later updates to the route

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Sourced Route Stop Details)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallySourcedRouteStopDetails",
                "required": [
                  "stopName",
                  "stopLocation"
                ],
                "type": "object",
                "properties": {
                  "stopName": {
                    "type": "string",
                    "description": "a name for the stop location",
                    "example": "pickup place 101"
                  },
                  "stopAddress": {
                    "type": "string",
                    "description": "an optional street address",
                    "example": "13 Sycamore Ave"
                  },
                  "stopLocation": {
                    "type": "string",
                    "description": "the location of the stop",
                    "example": "37.4224764 -122.0842499"
                  },
                  "stopDeadline": {
                    "type": "string",
                    "description": "optional time and date when the stop must be arrived at",
                    "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$",
                    "example": "2019-04-05T02:04:16Z"
                  }
                }
              }

+ Response 200 (application/json)

    + Attributes (object)
        + routeId       : `c6d2ff2e69c212d4eb9d64b629a46689` (required, string) - the id of the route updated, to be used for later updates to the route
        + stopId        : `b4655ce13cb3e137013d852bd7d687ae` (required, string) - the id of the stop in the updated route (most likely a re-used location), to be use for later updates to Stop Geograhic Details

+ Response 204

+ Response 404 (text/plain)

        Error: vehicleId or routeId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Route Stop Geographic Details                                   [/api{version}/stops/{stopId}]

## Retrieve Route Stop Geographic Details [GET]

Clients can retrieve the _geographic details_ of a stop; the *Stop Geographic Details* are the specific location for the
truck and trailer to park and a polygon of geographic points indicating the entryway onto a facility (i.e. where the
truck should drive on approach).

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + stopId           : `b4655ce13cb3e137013d852bd7d687ae` (required, string) - The stop id to update

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)

    + Attributes (Stop Geographic Details)

+ Response 204

+ Response 404 (text/plain)

        Error: stopId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

### Update Route Stop Geographic Details [PATCH]

Clients can update the _geographic details_ of a stop; the *Stop Geographic Details* are the specific location for the
truck and trailer to park and a polygon of geographic points indicating the entryway onto a facility (i.e. where the
truck should drive on approach).

Sending data to this endpoint, using a previously returned `stopId` will update the geograhic details of the stop and
any other routes using this stop will also be updated.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + stopId           : `b4655ce13cb3e137013d852bd7d687ae` (required, string) - The stop id to update

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Sourced Stop Geographic Details)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallySourcedStopGeographicDetails",
                "required": [
                  "location"
                ],
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "an optional comment"
                  },
                  "location": {
                    "type": "string",
                    "description": "the location of the delivery date at this stop",
                    "example": "37.4224764 -122.0842499"
                  },
                  "entryArea": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "optional geographic location polygon detailing the entryway area for this stop"
                  }
                }
            }

+ Response 200 (application/json)

    + Attributes (object)
        + stopId        : `b4655ce13cb3e137013d852bd7d687ae` (required, string) - the id of the stop that was updated, to be used for later updates to Stop Geograhic Details

+ Response 204

+ Response 404 (text/plain)

        Error: stopId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Route & Directions Start

Motor freight carriers plan destinations and routes for their drivers and inform the drivers of the plan via the in-cab
components of a telematics system.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

Both personnel and semi-automated systems responsible for planning and assigning driver routes want to inform their
drivers about their planned route before the driver starts the trip. Given the vehicle that the Driver will take on the
route, they first check the vehicle for any faults or alarms in the past 24h by querying this endpoint.

* Vehicle Flagged Event

Then the trip start and stop destination is sent to the driver along with any other instructions (such as which trailers
to take). A successful creation of a route will yield a response indicating the routeId to use in further updates or
modifications to the route.

* Externally Sourced Route Start Stop Details

## Retrieve All Vehicle Flagged Events for a Given Time Period [GET /api{version}/vehicles/{vehicleId}/flagged_events/{?start,stop}]

Clients can retrieve all the flagged vehicle events of a given vehicle over a given period of time.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id to associate this route to
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Flagged Event)

+ Response 400 (text/plain)

        Error: start or stop parameter invalid

+ Response 404 (text/plain)

        Error: vehicleId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Create a Route with Start and Stop Details                 [POST /api{version}/vehicles/{vehicleId}/routes]

Clients can request the creation of a new route for a given vehicle, providing start & stop location along with
additional instructions in a *Externally Sourced Route Start Stop Details* object.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id to associate this route to

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Sourced Route Start Stop Details)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallySourcedRouteStartStopDetails",
                "required": [
                  "startName",
                  "startLocation",
                  "stopName",
                  "stopLocation"
                ],
                "type": "object",
                "properties": {
                  "startName": {
                    "type": "string",
                    "description": "a name for the start location",
                    "example": "start place 202"
                  },
                  "startAddress": {
                    "type": "string",
                    "description": "an optional street address of the start",
                    "example": "11 Elm Street"
                  },
                  "startLocation": {
                    "type": "string",
                    "description": "the location of the start",
                    "example": "37.4224764 -122.0842499"
                  },
                  "routeAddInstructions": {
                    "type": "string",
                    "description": "an optional comment with details about the route",
                    "example": "take trailers XXX and YYY"
                  },
                  "stopName": {
                    "type": "string",
                    "description": "a name for the stop location",
                    "example": "pickup place 101"
                  },
                  "stopAddress": {
                    "type": "string",
                    "description": "an optional street address",
                    "example": "13 Sycamore Ave"
                  },
                  "stopLocation": {
                    "type": "string",
                    "description": "the location of the stop",
                    "example": "37.4224764 -122.0842499"
                  },
                  "stopDeadline": {
                    "type": "string",
                    "description": "optional time and date when the stop must be arrived at",
                    "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$",
                    "example": "2019-04-05T02:04:16Z"
                  }
                }
            }

+ Response 201 (application/json)

    + Attributes (object)
        + routeId       : `c6d2ff2e69c212d4eb9d64b629a46689` (required, string) - the id of the route created, to be used for later updates to the route
        + stopId        : `b4655ce13cb3e137013d852bd7d687ae` (required, string) - the id of the stop in the created route (most likely a re-used location), to be use for later updates to Stop Geograhic Details

+ Response 204

+ Response 404 (text/plain)

        Error: vehicleId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Route and Directions Done

Motor freight carriers receive notifications when Drivers have completed their trip.

This feature is heavily used but also is commonly offered as an add-on to the TSP service from another party.

Both personnel and semi-automated systems responsible for planning and assigning driver routes want to be notified of a
completed trip, along with the driver information about duty on the trip. They follow the feed of:

* Duty Status Log

And mark trips completed based on the Duty Status Log context; at the end of a trip they also query for the most recent

* Stop Geographic Details

to receive updates on changes to gates, access, repairs etc at the destination (see *Retrieve Route Stop Geographic
Details* above for more details.)

## Feed Follow all Duty Status Logs                            [GET /api{version}/event_logs/feed{?token}]

Clients can follow a feed of Duty Status Log entries as they are added to the TSP system; following is accomplished via
polling an endpoint and providing a 'token' which evolves the window of new entries with each query in the polling.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | ALLOW       | ALLOW         | **DENY**   |    ALLOW   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned to 'follow' new Duty Status Logs; pass in a `null` or omit this token to start with a new token set to 'now'.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + token                                 (string) - a since-token, pass-in the token previously returned by GET of `feed` to 'follow' new Duty Status Logs
        + feed                                  (array[Duty Status Log], fixed-type) - the 'feed' of Duty Status Logs

+ Response 400 (text/plain)

        Error: token parameter invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Messaging by Geo-Location

Motor freight carriers use telematics systems to message their drivers for various reasons, not the least of which is to
notify the drivers of dangerous weather conditions in their area.

Personnel responsible for planning and assigning driver routes want to send messages to drivers in a particular
geographic region. They query the API for

* Coarse Vehicle Location Time History

of all vehicles over the present time period; then filtering-out all vehicles outside the particular geographic region,
then send messages to each vehicle by sending data _to_ the TSP:

* Externally Sourced Vehicle Display Messages

## Retrieve All Coarse Vehicle Location Time Histories         [GET /api{version}/fleet/coarse_locations/{?start,stop}]

Clients can retrieve the (coarse) vehicle locations (of all vehicles) over a given time period.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Coarse Vehicle Location Time History)

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Send a Vehicle Display Message to a Vehicle                [POST /api{version}/vehicles/{vehicleId}/message]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | ALLOW         | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id to send the message to

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Sourced Vehicle Display Messages)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallySourcedVehicleDisplayMessages",
                "required": [
                  "message"
                ],
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "description": "a brief 'subject-line' for this message"
                  },
                  "message": {
                    "type": "string",
                    "description": "the message to be displayed to the driver"
                  }
                }
            }

+ Response 201 (application/json)

+ Response 204

+ Response 404 (text/plain)

        Error: vehicleId not found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Driver Messaging by Vehicle

Motor freight carriers also message their drivers by sending messages directly to a vehicle.

Personnel responsible for planning and assigning driver routes want to send a message to a driver's vehicle. They send
data _to_ the TSP for a given vehicle:

* Externally Sourced Vehicle Display Messages

(see *Send a Vehicle Display Message to a Vehicle* above for more details.)

# Group Use Case Vehicle Location Time History Tracking

Motor freight carriers use telematics fleet Location Time History for multiple 'fleet dynamics modeling' use cases such
as: Fuel Purchase Prediction, Fuel Consumption Performance Tracking, and Fleet Maintenance Planning.

Autonomous analysis and reporting systems want to get the Location Time History of the fleet over a particular time
period. They query the API for

* Vehicle Location Time History

of all vehicles over a given time period.

(see *Export of all Vehicle Location Time History objects* above for more details.)

# Group Use Case Human Resources Process: Payroll

Motor freight carriers use telematics systems to assist in payroll processing. This enables efficiencies at scale that
are important to modern motor freight carrier operations.

Automated payroll/HR systems want to receive duty status logs and convert these into payroll tracking entries. To do
this they follow a feed of:

* Duty Status Log

(see *Follow a Feed of Duty Status Logs* above for more details) and they query for breaks and exemption rules for
(drivers in those logs:

* Region Specific Breaks Rules
* Region Specific Waivers

(see *Check Break Rules and Waivers* above for more details.)

In some cases, facilities systems want to set the driver status in cases where they are on-duty but not driving. To do
this their systems send data _to_ the TSPs:

* Externally Triggered Duty Status Change

(see *Send Custom-Integrated Duty Status Changes to the TSP* above for more details.) HR staff want to associate their
(Driver's with metadata for use by the TSP. e.g. the region of governance for duty breaks and exemptions. To do this
(their systems send data _to_ the TSPs:

* Externally Sourced Driver Info

## Update Driver with Externally Sourced Driver Info         [PATCH /api{version}/drivers/{driverId}]

Clients can request updates to the TSP's managed user accounts for drivers by sending data to this endpoint.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | **DENY**      | **DENY**   | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this status change.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (Externally Sourced Driver Info)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternallySourcedDriverInfo",
                "required": [
                  "username"
                ],
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "a username of this driver"
                  },
                  "hoursWorked": {
                    "type": "number",
                    "description": "the hours worked on-duty by this user so far today (on any duty at all)",
                    "example": 1.5
                  },
                  "driverLicenseNumber": {
                    "type": "string",
                    "description": "the driver's license number"
                  },
                  "country": {
                    "type": "string",
                    "description": "short code for the country of the driver's license",
                    "example": "CA"
                  },
                  "region": {
                    "type": "string",
                    "description": "short code for the country's region/state/province/territory of the driver's license",
                    "example": "ON"
                  },
                  "driverHomeTerminal": {
                    "type": "string",
                    "description": "the home terminal of the driver"
                  }
                }
            }

+ Response 200 (application/json)

+ Response 204

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case Human Resources Process: Accident Report

Motor freight carriers use telematics systems to monitor their fleets for accidents.

Semi-automated systems want to receive notification of any accidents in their fleet and handle accident reports
internally according to their own processes. To do this they follow a feed of:

* Duty Status Log

(see *Follow a Feed of Duty Status Logs* above for more details.)

# Group Use Case Carrier Custom Business Intelligence

Motor freight carriers use telematics systems for multiple, custom, business intelligence purposes where the overall
health of their fleet is considered and fed into their own proprietary models.

Automated and semi-automated analysis and reporting systems want to get the overall fleet health status for a particular
time period. They query the API for

* Coarse Vehicle Location Time History
* Flagged Vehicle Performance Event
* Vehicle Performance Event
* Vehicle Fault Code Event

of all vehicles over a given time period.

For certain use cases, they may opt to *follow* a feed of the above objects instead. See *Follow Fleet Vehicle Info* below.

They may also follow-up with queries of the hi-resolution time history of the fleet for a given time period:

* Vehicle Location Time History

(see *Retrieve All Vehicle Location Time Histories* above for more details.)

## Retrieve Fleet Vehicle Info                                 [GET /api{version}/fleet/infos/{?start,stop}]

Clients can retrieve a combination of all vehicle information for all vehicles over a given time period.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + coarseVehicleLocationTimeHistories                 (required, Coarse Vehicle Location Time History) - The Coarse Vehicle Location Time History for all vehicles in the requested time period
        + flaggedVehiclePerformanceEvents                    (required, array[Flagged Vehicle Performance Event], fixed-type) - all flagged vehicle performance events for all vehicles in the requested time period
        + vehiclePerformanceEvents                           (required, array[Vehicle Performance Event], fixed-type) - all vehicle performance events for all vehicles in the requested time period
        + vehicleFaultCodeEvents                             (required, array[Vehicle Fault Code Event], fixed-type) - all vehicle fault code events for all vehicles in the requested time period

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Feed Follow all Fleet Vehicle Info                          [GET /api{version}/fleet/infos/feed{?token}]

Clients can follow a feed of a combination of all vehicle information for all vehicles as they are added to the TSP
system; following is accomplished via polling an endpoint and providing a 'token' which evolves the window of new
entries with each query in the polling.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | ALLOW        | **DENY***  | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned to 'follow' new Duty Status Logs; pass in a `null` or omit this token to start with a new token set to 'now'.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + token                                 (string) - a since-token, pass-in the token previously returned by GET of `feed` to 'follow' new Duty Status Logs
        + feed                                  (object) - the 'feed' of Fleet Vehicle Info
            + coarseVehicleLocationTimeHistories                 (required, Coarse Vehicle Location Time History) - The Coarse Vehicle Location Time History for all vehicles in the requested time period
            + flaggedVehiclePerformanceEvents                    (required, array[Flagged Vehicle Performance Event], fixed-type) - all flagged vehicle performance events for all vehicles in the requested time period
            + vehiclePerformanceEvents                           (required, array[Vehicle Performance Event], fixed-type) - all vehicle performance events for all vehicles in the requested time period
            + vehicleFaultCodeEvents                             (required, array[Vehicle Fault Code Event], fixed-type) - all vehicle fault code events for all vehicles in the requested time period

+ Response 400 (text/plain)

        Error: token parameter invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"


# Group Use Case Compliance and Safety Monitoring

Motor freight carriers use telematics systems to monitor compliance and safety for their operations.

Personnel responsible for safety and compliance want to review the safety and compliance of their drivers. For a given
driver they retrieve from the TSP:

* Driver Performance Summary

Motor freight carriers want to create, delete and modify driver login credentials that the drivers will use in the
field. They send data _to_ the TSP:

* External TSP Portal User Management

## Retrieve Driver Performance Summaries                       [GET /api{version}/drivers/{driverId}/performance_summaries/{?start,stop}]

Clients can request all driver performance summaries for a specific driver within a given period of time.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | **DENY**      | **DENY**   | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver for performance summmaries
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + performanceSummaries                                   (required, array[Driver Performance Summary], fixed-type) - all the Driver Performance Summary objects for this driver for the requested time period

+ Response 400 (text/plain)

        Error: start or stop parameter invalid

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Update TSP Portal User                                    [PATCH /api{version}/drivers/{driverId}/driverportaluser]

Clients can request updates to the TSP's portal user accounts for drivers by sending data to this endpoint.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | **DENY**   | **DENY**    | **DENY**      | **DENY**   | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this status change.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

    + Attributes (External TSP Portal User Management)

    + Schema

            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "ExternalTSPPortalUserManagement",
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "TSP portal username",
                    "example": "joe2"
                  },
                  "password": {
                    "type": "string",
                    "description": "user password"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "this user is enabled or disabled",
                    "example": true
                  }
                }
              }

+ Response 200 (application/json)

+ Response 204

+ Response 404 (text/plain)

        Error: driverId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Use Case In-Field Maintenance & Repair

Motor freight carriers use telematics systems to plan (and react to) maintenance needs of their fleets.

Automated back-end systems at the motor freight carrier want to be notified of any vehicle issues requiring maintenance.
The systems determine which events require maintenance by following a feed of:

* Vehicle Fault Code Event

In the event that an issue requiring maintenance must be resolved in the field, the system will query to get the most
recent vehicle location

* Vehicle Location Time History

## Follow a Feed of All Vehicle Fault Code Events              [GET /api{version}/fleet/faults/feed?{token}]

Clients can follow a feed of Vehicle Fault Code Events as they are added to the TSP system; following is accomplished
bia polling an endpoint and providing a 'token' which evolves the window of new entries with each query in the polling.

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY***   | ALLOW        | **DENY**   | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned to 'follow' new Duty Status Logs; pass in a `null` or omit this token to start with a new token set to 'now'.

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + token                                 (string) - a since-token, pass-in the token previously returned by GET of `feed` to 'follow' new Duty Status Logs
        + feed                                  (array[Vehicle Fault Code Event], fixed-type) - the 'feed' of Duty Status Logs

+ Response 400 (text/plain)

        Error: token parameters invalid

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Get Location of a Vehicle                                   [GET /api{version}/vehicles/{vehicleId}/locations/{?start,stop}]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id to associate this route to
    + start:    `2019-04-05T02:04:16Z` (required, string) - the start-date of the search
    + stop:     `2019-04-05T02:04:16Z` (required, string) - the stop-date of the search

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Location Time History)

+ Response 400 (text/plain)

        Error: start or stop parameters invalid

+ Response 404 (text/plain)

        Error: vehicleId Not Found

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Localization

## Translation Table                                               [/api{version}/i18n]

Based on [LinguiJS formats](https://lingui.js.org/ref/catalog-formats.html); where the preferred format is gettext PO
files, which are closely represented here. Unfortunately the Lingui JS raw format and JSON formats cannot be represented
in API Blueprint's formal spec language.

+ Attributes (object)
    + data (array[Token Translation], fixed-type)

### Retrieve a Translation Table [GET]

Clients can retrieve the current translation table for this TSP's Open Telematics API for given language (provided in the request headers.)

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | ALLOW         | ALLOW      | ALLOW      | ALLOW      |

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`

+ Request
    + Headers

            Accept-Language: en
            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (object)
        + data (array[Token Translation], fixed-type)

    + Body

            {
              "data": [
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_DIAGNOSTIC",
                    "msgstr": "In a diagnostic state"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_DIAGNOSTICMANUALPOSITION",
                    "msgstr": "Combination of ManualPosition and Diagnostic"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_MALFUNCTION",
                    "msgstr": "In a malfunction state"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_MALFUNCTIONMANUALPOSITION",
                    "msgstr": "Combination of ManualPosition and Malfunction"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_MANUALPOSITION",
                    "msgstr": "User has inputted a manual address for the log during a position compliance diagnostic even"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_NONE",
                    "msgstr": "No malfunction or diagnostic present or cleared"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_SYSTEMDIAGNOSTICCLEAR",
                    "msgstr": "System has determined that the diagnostic is cleared. Not exported to FMCSA"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_SYSTEMDIAGNOSTICCLEARDRIVING",
                    "msgstr": "System has determined that the diagnostic is cleared and the vehicle was in motion. Used for PowerCompliance"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_USERDIAGNOSTICCLEAR",
                    "msgstr": "User has cleared the diagnostic"
                },
                {
                    "origin": "Duty Status Log, malfunction",
                    "msgid":  "MALFUNCTION_USERMALFUNCTIONCLEAR",
                    "msgstr": "User has cleared the malfunction"
                },
                {
                    "origin": "Duty Status Log, origin",
                    "msgid":  "ORIGIN_AUTOMATIC",
                    "msgstr": "Automatic recorded by device"
                },
                {
                    "origin": "Duty Status Log, origin",
                    "msgid":  "ORIGIN_MANUAL",
                    "msgstr": "Manual entry by driver"
                },
                {
                    "origin": "Duty Status Log, origin",
                    "msgid":  "ORIGIN_OTHERUSER",
                    "msgstr": "Other authenticated user"
                },
                {
                    "origin": "Duty Status Log, origin",
                    "msgid":  "ORIGIN_UNASSIGNED",
                    "msgstr": "Unassigned driver"
                },
                {
                    "origin": "Duty Status Log, state",
                    "msgid":  "STATE_ACTIVE",
                    "msgstr": "The log is active and has been accepted by the driver."
                },
                {
                    "origin": "Duty Status Log, state",
                    "msgid":  "STATE_INACTIVE",
                    "msgstr": "The log is inactive. It has been removed or it is the modification history of a log."
                },
                {
                    "origin": "Duty Status Log, state",
                    "msgid":  "STATE_REJECTED",
                    "msgstr": "The log is a rejected edit request from another user."
                },
                {
                    "origin": "Duty Status Log, state",
                    "msgid":  "STATE_REQUESTED",
                    "msgstr": "The log is a pending edit request from another user."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ADVERSEWEATHER",
                    "msgstr": "Adverse weather and driving conditions exemption."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_AUTHORITY",
                    "msgstr": "Authority status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_CERTIFY",
                    "msgstr": "Daily certify record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_CONNECTED",
                    "msgstr": "System log for device power connection."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_D",
                    "msgstr": "Drive status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_DATARECORDINGCOMPLIANCE",
                    "msgstr": "Storage capacity is reached, or missing data elements exist. Applies to Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_DATATRANSFERCOMPLIANCE",
                    "msgstr": "Transfer of data fails to complete. Applies to Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_DISCONNECTED",
                    "msgstr": "System log for device power disconnection."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ENGINEPOWERUP",
                    "msgstr": "Engine power up record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ENGINEPOWERUPPC",
                    "msgstr": "Engine power up in PC record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ENGINESHUTDOWN",
                    "msgstr": "Engine shutdown record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ENGINESHUTDOWNPC",
                    "msgstr": "Engine shutdown in PC record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ENGINESYNCCOMPLIANCE",
                    "msgstr": "Occurs when engine information (power, motion, km, and hours) cannot be obtained by ELD. Applies to Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_EXEMPTION16H",
                    "msgstr": "Exemption 16 hour."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_EXEMPTIONOFFDUTYDEFERRAL",
                    "msgstr": "Exemption off duty deferral."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_INT_D",
                    "msgstr": "Intermediate Drive Event."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_INT_PC",
                    "msgstr": "Intermediate Personal Conveyance Event."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_LOGIN",
                    "msgstr": "User login record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_LOGOFF",
                    "msgstr": "User logout record."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_MISSINGELEMENTCOMPLIANCE",
                    "msgstr": "Missing data elements. Applies to Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_OFF",
                    "msgstr": "Off-duty status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_ON",
                    "msgstr": "On-duty status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_OTHERCOMPLIANCE",
                    "msgstr": "Other instances of Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_PC",
                    "msgstr": "Personal conveyance driver status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_POSITIONINGCOMPLIANCE",
                    "msgstr": "ELD continually fails to acquire valid position measurement. Applies to Malfunction."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_POWERCOMPLIANCE",
                    "msgstr": "Engine power status engages ELD within 1 minute. Applies to Malfunction or Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_SB",
                    "msgstr": "Sleeper berth status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_SITUATIONALDRIVINGCLEAR",
                    "msgstr": "YM, PC, or WT clearing event."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_TIMINGCOMPLIANCE",
                    "msgstr": "When ELD date and time exceeds 10 minute offset from UTC. Applies to Malfunction."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_UNIDENTIFIEDDRIVINGCOMPLIANCE",
                    "msgstr": "More than 30 minutes of driving with unidentified driving. Applies to Diagnostic."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_WT",
                    "msgstr": "Wait time oil well driver status."
                },
                {
                    "origin": "Duty Status Log, status",
                    "msgid":  "STATUS_YM",
                    "msgstr": "Yard move driver status."
                },
                {
                    "origin": "Duty Status Log, eventRecordStatus",
                    "msgid":  "RECORDSTATUS_ACTIVE",
                    "msgstr": "Active"
                },
                {
                    "origin": "Duty Status Log, eventRecordStatus",
                    "msgid":  "RECORDSTATUS_INACTIVE_TO_CHANGED",
                    "msgstr": "Inactive -> Changed"
                },
                {
                    "origin": "Duty Status Log, eventRecordStatus",
                    "msgid":  "RECORDSTATUS_INACTIVE_TO_CHANGE_REQUESTED",
                    "msgstr": "Inactive -> Change Requested"
                },
                {
                    "origin": "Duty Status Log, eventRecordStatus",
                    "msgid":  "RECORDSTATUS_INACTIVE_TO_CHANGE_REJECTED",
                    "msgstr": "Inactive -> Change Rejected"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_CHANGE_DUTYSTATUS",
                    "msgstr": "A change in driver's duty-status"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_INTERMEDIATE_LOG",
                    "msgstr": "An intermediate log"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_CHANGE_PERSONAL_OR_YM",
                    "msgstr": "A change in driver's indication of authorized personal use of CMV or yard moves"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_CERT_RECORDS",
                    "msgstr": "A driver's certification/re-certification of records"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_LOGINOUT_ACTIVITY",
                    "msgstr": "A driver's login/logout activity"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_CMV_POWERUPDOWN",
                    "msgstr": "CMV's engine power up / shut down activity"
                },
                {
                    "origin": "Duty Status Log, eventType",
                    "msgid":  "EVENTTYPE_MALFUNCTION_OR_DIAGNOSTIC",
                    "msgstr": "A malfunction or data diagnostic detection"
                },
                {
                    "origin": "State of Health, status",
                    "msgid":  "SERVICESTATUS_OPERATIONAL",
                    "msgstr": "the service is operational"
                },
                {
                    "origin": "State of Health, status",
                    "msgid":  "SERVICESTATUS_DEGRADED_PERFORMANCE",
                    "msgstr": "the service is operating, but with limitations"
                },
                {
                    "origin": "State of Health, status",
                    "msgid":  "SERVICESTATUS_PARTIAL_OUTAGE",
                    "msgstr": "there are aspects of the service which are not presently available"
                },
                {
                    "origin": "State of Health, status",
                    "msgid":  "SERVICESTATUS_MAJOR_OUTAGE",
                    "msgstr": "the service is unavailab"
                }
                {
                    "origin": "Externally Trigger Duty Status Change, status",
                    "msgid":  "EXTTRIG_STATUS_ON",
                    "msgstr"  "The driver has changed status to on-duty"
                },
                {
                    "origin": "Externally Trigger Duty Status Change, status",
                    "msgid":  "EXTTRIG_STATUS_OFF",
                    "msgstr"  "The driver has changed status to off-duty"
                },
                {
                    "origin": "Vehicle Flagged Event, trigger",
                    "msgid":  "FLAGGEDTYPE_ROLL_STABILITY",
                    "msgstr": "Roll stability flagged event"
                },
                {
                    "origin": "Vehicle Flagged Event, trigger",
                    "msgid":  "FLAGGEDTYPE_SUDDEN_START",
                    "msgstr": "Sudden start flagged event"
                },
                {
                    "origin": "Vehicle Flagged Event, trigger",
                    "msgid":  "FLAGGEDTYPE_SUDDEN_STOP",
                    "msgstr": "Sudden stop flagged event"
                },
                {
                    "origin": "Vehicle Flagged Event, trigger",
                    "msgid":  "FLAGGEDTYPE_COLLISION",
                    "msgstr": "Collision flagged event"
                },
                {
                    "origin": "Vehicle Flagged Event, trigger",
                    "msgid":  "FLAGGEDTYPE_ONBOARD_RECORDING",
                    "msgstr": "onboard recording flagged event"
                }
                {   "origin": "Vehicle Flagged Event, gpsQuality",
                    "msgid":  "GPSQUALITY_FINELOCK",
                    "msgstr": "gps receiver had fine lock"
                },
                {   "origin": "Vehicle Flagged Event, gpsQuality",
                    "msgid":  "GPSQUALITY_OTHER",
                    "msgstr": "gps receiver had fix other than fine lock"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_REGEN_NEEDED",
                    "msgstr":  "Filter regen needed"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_FORCED_REGEN_WILL_HAPPEN",
                    "msgstr":  "Filter forced regen will happen"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_ACTIVE_REGEN_START",
                    "msgstr":  "Filter active regen started"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_PASSIVE_REGEN_START",
                    "msgstr":  "Filter passive regen started"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_ACTIVE_REGEN_END",
                    "msgstr":  "Filter active regen ended"
                },
                {
                    "origin":  "Vehicle Performance Event, particulateFilterStatus",
                    "msgid":   "FILTERSTATUS_PASSIVE_REGEN_END",
                    "msgstr":  "Filter passive regen ended"
                }
                {
                    "origin":  "Vehicle Fault Code Event",
                    "msgid":   "CLEARTYPE_BYSYSTEMS",
                    "msgstr":  "cleared by systems"
                },
                {
                    "origin":  "Vehicle Fault Code Event",
                    "msgid":   "CLEARTYPE_MANUALLYBACKOFFICE",
                    "msgstr":  "cleared manually in backoffice"
                },
                {
                    "origin":   "Vehicle Fault Code Event, parameterOrSubsystemIdType",
                    "msgid":    "PIDORSID_PID",
                    "msgstr":   "This is a PID"
                },
                {
                    "origin":   "Vehicle Fault Code Event, parameterOrSubsystemIdType",
                    "msgid":    "PIDORSID_SID",
                    "msgstr":   "This is a SID"
                },
                {   "origin":   "Vehicle Locatoin Time History",
                    "msgid":    "TIMERESOLUTION_MAX",
                    "msgstr":   "This is at the highest available time resolution"
                },
                {   "origin":   "Vehicle Locatoin Time History",
                    "msgid":    "TIMERESOLUTION_NOT_MAX",
                    "msgstr":   "This is not at the highest available time resolution"
                }
              ]
            }

+ Response 406

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Open Telematics Data Model

For the purposes of clearly detailing the data object types used by the API endpoints above, we include the object
models here along with simple 'get by id' APIs. These simple APIs could be useful for debugging and inspection purposes;
it is expected that the 'use case based' API endpoints defined above will be of more use in integration than these.

## Duty Status Log Object                                          [/api{version}/event_logs/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Duty Status Log of interest

+ Attributes (Duty Status Log)

### Get a Duty Status Log by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Duty Status Log)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Driver Object                                                   [/api{version}/drivers/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of a Driver object

+ Attributes (Driver)

### Get a Driver Object by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Driver)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Object                                                  [/api{version}/vehicles/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of a Vehicle object

+ Attributes (Vehicle)


### Get a Vehicle Object by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Region Specific Breaks Rules Object                             [/api{version}/region_specific_breaks/{id}]

Rules governing driver brakes for the specific region of governance of the driver in question. The rules are defined
only by the region that is dictating the rules, clients are expected to interpret the region to realize specific break
rules.

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Region Specific Breaks Rules of interest

+ Attributes (Region Specific Breaks Rules)

### Get a Region Specific Breaks Rules by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Region Specific Breaks Rules)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Region Specific Waivers Object                                  [/api{version}/region_specific_waivers/{id}]

Waivers and exceptions for the specific region of governance of the driver in question. One entity per day of a waiver
available

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Region Specific Waivers of interest

+ Attributes (Region Specific Waivers)

### Get a Region Specific Waivers by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Region Specific Waivers)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Stop Geographic Details Object                                  [/api{version}/stops/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Stop Geographic Details of interest

+ Attributes (Stop Geographic Details)

### Get a Stop Geographic Details by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Stop Geographic Details)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Location Time Object                                    [/api{version}/fleet/locations/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Vehicle Location Time of interest

+ Attributes (Vehicle Location Time)

### Get a Vehicle Location Time by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Location Time)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Flagged Event Object                                    [/api{version}/fleet/flagged_events/{id}]

The purpose of the flagged events is to flag potential saftey issues for motor freight carrier staff to validate

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Vehicle Flagged Event of interest

+ Attributes (Vehicle Flagged Event)

### Get a Vehicle Flagged Event by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Flagged Event)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Fault Code Event Object                                 [/api{version}/fleet/faults/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Vehicle Fault Code Event of interest

+ Attributes (Vehicle Fault Code Event)

### Get a Vehicle Fault Code Event by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Fault Code Event)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Performance Thresholds Object                                   [/api{version}/fleet/performance_thresholds/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Performance Thresholds of interest

+ Attributes (Performance Thresholds)

### Get a Performance Thresholds by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Performance Thresholds)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Performance Event Object                                [/api{version}/fleet/performance_events/{id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Vehicle Performance Event of interest

+ Attributes (Vehicle Performance Event)

### Get a Vehicle Performance Event by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| ALLOW       | ALLOW        | ALLOW      | ALLOW       | **DENY**      | **DENY**   | **DENY**   | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Performance Event)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Driver Performance Summary Object                               [/api{version}/driver_performance_summaries/{id}]

Summary statistics on performance of drivers.

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + id            (string) - ID of the Driver Performance Summary of interest

+ Attributes (Driver Performance Summary)

### Get a Driver Performance Summary by its ID [GET]

**Access Controls**

|Role:  |Vehicle Query|Vehicle Follow|Driver Query|Driver Follow|Driver Dispatch|Driver Duty |HR          |Admin       |
|-------|-------------|--------------|------------|-------------|---------------|------------|------------|------------|
|Access:| **DENY**    | **DENY**     | ALLOW      | ALLOW       | **DENY**      | **DENY**   | ALLOW      | ALLOW      |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Driver Performance Summary)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"
